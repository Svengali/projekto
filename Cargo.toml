[package]
name = "projekto"
version = "0.1.0"
edition = "2021"
default-run = "main"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[workspace]
members = ["crates/*"]

[dependencies]
bevy = { version = "0.8", default-features = false }
env_logger = "0.9"

serde = "1"
ron = "0.8.0"
futures-lite = "1.12"

itertools = "0.10"

# Projekto dependencies
projekto_core = { path = "crates/core" }
projekto_shaping = { path = "crates/shaping" }
projekto_camera = { path = "crates/camera" }
projekto_genesis = { path = "crates/genesis" }

# Used by inspector
bevy-inspector-egui = { version = "0.12", optional = true }
bevy_egui = { version = "0.15", default-features = false, optional = true }

[dev-dependencies]
rand = "0.8"
projekto_core = { path = "crates/core", features = ["auto_load_kinds_descs"] }

[features]
default = [
     "dev",
     "inspector",
     # "mem_alloc",
]

# Only enable used bevy features, to reduce clean compile time.
dev = [
     "bevy/dynamic",            # On Windows 11, dynamic and cargo-lld doesn't work if bevy_gilrs is enabled
     "bevy/bevy_asset",
     "bevy/bevy_scene",
     "bevy/bevy_winit",
     "bevy/bevy_render",
     "bevy/png",
     "bevy/filesystem_watcher",
]

inspector = ["dep:bevy-inspector-egui", "dep:bevy_egui"]
mem_alloc = []
serde_ron = []

[profile.dev.package."*"]
opt-level = 3

[[bin]]
name = "main"
path = "src/main.rs"

[[example]]
name = "orbit_cam"
path = "examples/orbit_cam.rs"

[[example]]
name = "swap_cam"
path = "examples/swap_cam.rs"
